import React from 'react';
import MinimalWinnerForm from './components/MinimalWinnerForm';
import { Toaster } from 'react-hot-toast';
import ThemeProvider from './components/ThemeProvider';
import { CampusProvider } from './contexts/CampusContext';
import { Navbar } from './components/Navbar';
import { DashboardOverview } from './components/DashboardOverview';
import { RewardsSection } from './components/RewardsSection';
import { LeaderboardSection } from './components/LeaderboardSection';
import { HeroSection } from './components/HeroSection';
import LoginPage from './pages/LoginPage';
import { EventPage } from './pages/EventPage';
import AdminLayout from './pages/admin/AdminLayout';
import EventsAdmin from './pages/admin/EventsAdmin';
import RewardsAdmin from './pages/admin/RewardsAdmin';
import PointsUploadAdmin from './pages/admin/PointsUploadAdmin';
import UsersAdmin from './pages/admin/UsersAdmin';
import MediaAdmin from './pages/admin/MediaAdmin';
import SettingsAdmin from './pages/admin/SettingsAdmin';
import ClaimsAdmin from './pages/admin/ClaimsAdmin';
import './index.css';
import { campusList } from './components/campusList';
import FeaturedWinnersCarousel from './components/FeaturedWinnersCarousel';
import { BrowserRouter as Router, Routes, Route, Link, Navigate } from 'react-router-dom';
import UserOnboardingModal from './components/UserOnboardingModal';
import { auth, db } from './firebase';
import { useAuthState } from 'react-firebase-hooks/auth';
import { doc, getDoc, updateDoc, serverTimestamp } from 'firebase/firestore';
import { createPortal } from 'react-dom';
import { AriaDebugger, preventRootAriaHidden } from './utils/ariaDebugger';

const houseList = ['Malhar', 'Bageshree', 'Bhairav'];

interface UserProfile {
  uid: string;
  email?: string | null;
  displayName?: string | null;
  photoURL?: string | null;
  campus?: string;
  house?: string;
  linkedin?: string;
  github?: string;
  portfolio?: string;
  createdAt?: any;
  updatedAt?: any;
}

function App() {
  const [user] = useAuthState(auth);
  const [showOnboarding, setShowOnboarding] = React.useState<boolean>(false);
  const [showTestimonialForm, setShowTestimonialForm] = React.useState(false);
  const openingGuard = React.useRef(false);
  const [overlayInteractive, setOverlayInteractive] = React.useState(false);
  const modalRef = React.useRef<HTMLDivElement | null>(null);
  const lastActiveElementRef = React.useRef<HTMLElement | null>(null);
  
  // Profile check for redirect
  const [profileChecked, setProfileChecked] = React.useState(false);
  const [profileIncomplete, setProfileIncomplete] = React.useState(false);

  // Check for missing profile details
  React.useEffect(() => {
    const checkProfile = async () => {
      if (!user) {
        setProfileChecked(true);
        setProfileIncomplete(false);
        return;
      }
      const ref = doc(db, 'users', user.uid);
      const snap = await getDoc(ref);
      let missingDetails = false;
      if (!snap.exists()) {
        missingDetails = true;
      } else {
        const data = snap.data() as UserProfile;
        missingDetails =
          !data.campus ||
          !data.house ||
          !data.displayName ||
          !data.email ||
          !data.linkedin ||
          !data.github ||
          !data.portfolio;
      }
      setProfileChecked(true);
      setProfileIncomplete(missingDetails);
    };
    checkProfile();
  }, [user]);
  React.useEffect(() => {
    const checkProfile = async () => {
      if (!user) {
        setProfileChecked(true);
        setProfileIncomplete(false);
        return;
      }
      const ref = doc(db, 'users', user.uid);
      const snap = await getDoc(ref);
      let missingDetails = false;
      if (!snap.exists()) {
        missingDetails = true;
      } else {
        const data = snap.data() as UserProfile;
        missingDetails =
          !data.campus ||
          !data.house ||
          !data.displayName ||
          !data.email ||
          !data.linkedin ||
          !data.github ||
          !data.portfolio;
      }
      setProfileChecked(true);
      setProfileIncomplete(missingDetails);
    };
    checkProfile();
  }, [user]);

  // Debug and prevent aria-hidden issues
  React.useEffect(() => {
    console.log('ðŸš€ Starting ARIA debugging...');
    const ariaDebugger = AriaDebugger.startDebugging();
    const preventObserver = preventRootAriaHidden();
    
    return () => {
      ariaDebugger.stopDebugging();
      preventObserver?.disconnect();
    };
  }, []);

  // Load or create user profile
  React.useEffect(() => {
    let cancelled = false;
    const load = async () => {
      if (!user) {
        setShowOnboarding(false);
        return;
      }
      try {
        const ref = doc(db, 'users', user.uid);
        const snap = await getDoc(ref);
        if (!snap.exists()) {
          const newProfile: UserProfile = {
            uid: user.uid,
            email: user.email,
            displayName: user.displayName,
            photoURL: user.photoURL,
            createdAt: serverTimestamp(),
            updatedAt: serverTimestamp()
          };
                      <LeaderboardSection id="leaderboard" />
                      <FeaturedWinnersCarousel />
                    </>
              } />
            </Routes>
            <footer className="site-footer">
              ...existing code...
            </footer>
            {/* Custom testimonial modal to avoid Material UI conflicts */}
            {/* Footer content is already present below. */}
            <UserOnboardingModal
              open={!!user && showOnboarding}
              campusList={campusList || []}
              houseList={houseList || []}
              onSubmit={handleOnboarding}
            />
          </CampusProvider>
        </ThemeProvider>
      </Router>
      const ref = doc(db, 'users', user.uid);
      await updateDoc(ref, {
        campus,
        house,
        linkedin: linkedin || '',
        github: github || '',
        portfolio: portfolio || '',
        updatedAt: serverTimestamp()
      });
      setShowOnboarding(false);
    } catch (e) {
      console.error('Failed to update onboarding info', e);
    }
  };

  return (
    <Router>
      <ThemeProvider>
        <CampusProvider>
          <Routes>
            <Route path="/login" element={<LoginPage />} />
            <Route path="/event" element={<EventPage />} />
            <Route path="/admin" element={<AdminLayout />}>
              <Route index element={<EventsAdmin />} />
              <Route path="events" element={<EventsAdmin />} />
              <Route path="rewards" element={<RewardsAdmin />} />
              <Route path="users" element={<UsersAdmin />} />
              <Route path="claims" element={<ClaimsAdmin />} />
              <Route path="media" element={<MediaAdmin />} />
              <Route path="points-upload" element={<PointsUploadAdmin />} />
              <Route path="settings" element={<SettingsAdmin />} />
              <Route path="*" element={<Navigate to="events" replace />} />
            </Route>
            <Route path="/" element={
              <>
                <HeroSection />
                <Toaster position="top-right" toastOptions={{ style: { background: '#182a36', color: '#fff', fontWeight: 500, borderRadius: 10 } }} />
                <Navbar />
                <DashboardOverview id="dashboard" />
                <RewardsSection id="rewards" />
                <LeaderboardSection id="leaderboard" />
                <FeaturedWinnersCarousel />
              </>
            } />
          </Routes>
          <footer className="site-footer">
            <div className="footer-columns footer-three-cols">
              <div className="footer-sitemap">
                <h4>Sitemap</h4>
                <ul>
                  <li><a href="#dashboard">Dashboard</a></li>
                  <li><a href="#rewards">Rewards</a></li>
                  <li><a href="#leaderboard">Leaderboard</a></li>
                  <li><a href="#request">Request Rewards</a></li>
                  <li><a href="/event" style={{ color: '#00e6d2', fontWeight: 600 }}>Events</a></li>
                  <li><Link to="/login" style={{ color: '#1ed760', fontWeight: 600 }}>Login</Link></li>
                  <li><Link to="/admin" style={{ color: '#fff', fontWeight: 600 }}>Admin</Link></li>
                </ul>
              </div>
              <div className="footer-calendar-col">
                <h4>Upcoming Events</h4>
                <ul className="footer-calendar-list">
                  <li><strong>Sep 5:</strong> Teachers' Day</li>
                  <li><strong>Sep 20:</strong> Sports Fest</li>
                  <Router>
                    <ThemeProvider>
                      <CampusProvider>
                        <Routes>
                          <Route path="/login" element={<LoginPage />} />
                          <Route path="/event" element={<EventPage />} />
                          <Route path="/admin" element={<AdminLayout />}>
                            <Route index element={<EventsAdmin />} />
                            <Route path="events" element={<EventsAdmin />} />
                            <Route path="rewards" element={<RewardsAdmin />} />
                            <Route path="users" element={<UsersAdmin />} />
                            <Route path="claims" element={<ClaimsAdmin />} />
                            <Route path="media" element={<MediaAdmin />} />
                            <Route path="points-upload" element={<PointsUploadAdmin />} />
                            <Route path="settings" element={<SettingsAdmin />} />
                            <Route path="*" element={<Navigate to="events" replace />} />
                          </Route>
                          <Route path="/" element={
                            profileChecked && profileIncomplete
                              ? <Navigate to="/login" replace />
                              : (
                                <>
                                  <HeroSection />
                                  <Toaster position="top-right" toastOptions={{ style: { background: '#182a36', color: '#fff', fontWeight: 500, borderRadius: 10 } }} />
                                  <Navbar />
                                  <DashboardOverview id="dashboard" />
                                  <RewardsSection id="rewards" />
                                  <LeaderboardSection id="leaderboard" />
                                  <FeaturedWinnersCarousel />
                                  <footer className="site-footer">
                                    <div className="footer-columns footer-three-cols">
                                      <div className="footer-sitemap">
                                        <h4>Sitemap</h4>
                                        <ul>
                                          <li><a href="#dashboard">Dashboard</a></li>
                                          <li><a href="#rewards">Rewards</a></li>
                                          <li><a href="#leaderboard">Leaderboard</a></li>
                                          <li><a href="#request">Request Rewards</a></li>
                                          <li><a href="/event" style={{ color: '#00e6d2', fontWeight: 600 }}>Events</a></li>
                                          <li><Link to="/login" style={{ color: '#1ed760', fontWeight: 600 }}>Login</Link></li>
                                          <li><Link to="/admin" style={{ color: '#fff', fontWeight: 600 }}>Admin</Link></li>
                                        </ul>
                                      </div>
                                      <div className="footer-calendar-col">
                                        <h4>Upcoming Events</h4>
                                        <ul className="footer-calendar-list">
                                          <li><strong>Sep 5:</strong> Teachers' Day</li>
                                          <li><strong>Sep 20:</strong> Sports Fest</li>
                                          <li><em>More events coming soon...</em></li>
                                        </ul>
                                      </div>
                                      <div className="footer-calendar-col footer-calendar-past">
                                        <h4>Past Events</h4>
                                        <ul className="footer-calendar-list">
                                          <li><strong>Aug 15:</strong> Independence Day Celebration</li>
                                          <li><strong>Aug 22:</strong> Coding Contest</li>
                                        </ul>
                                      </div>
                                    </div>
                                    <div style={{ textAlign: 'center', marginTop: '2rem' }}>
                                      <button
                                        className="bg-[#00e6d2] text-[#232e44] font-bold py-2 px-6 rounded-full shadow-lg hover:bg-[#1ed760] transition"
                                        onClick={handleTestimonialClick}
                                        style={{
                                          willChange: 'transform',
                                          contain: 'layout style paint'
                                        }}
                                      >
                                        Submit Testimonial
                                      </button>
                                    </div>
                                    <div className="footer-bottom-message">
                                      Made with <span style={{ color: '#ff0058', fontWeight: 700 }}>&#10084;</span> for Navgurukul Partners.
                                    </div>
                                  </footer>
                                  {/* Custom testimonial modal to avoid Material UI conflicts */}
                                  {showTestimonialForm && createPortal(
                                    <div 
                                      id="__testimonial_portal_overlay"
                                      style={{
                                        position: 'fixed',
                                        inset: 0,
                                        display: 'flex',
                                        alignItems: 'center',
                                        justifyContent: 'center',
                                        backgroundColor: 'rgba(0, 0, 0, 0.6)',
                                        backdropFilter: 'blur(2px)',
                                        zIndex: 10050,
                                        pointerEvents: overlayInteractive ? 'auto' : 'none',
                                        padding: '1rem'
                                      }}
                                      onClick={() => {
                                        if (!overlayInteractive || openingGuard.current) return;
                                        setShowTestimonialForm(false);
                                      }}
                                      role="dialog"
                                      aria-modal="true"
                                      aria-labelledby="testimonial-modal-title"
                                    >
                                      <div style={{position:'absolute',top:8,right:8,zIndex:10052,padding:'2px 8px',borderRadius:6,fontSize:12,background:overlayInteractive?'#00e6d2':'#ff0058',color:'#232e44',fontWeight:700}}>
                                        {overlayInteractive ? 'Overlay: ACTIVE' : 'Overlay: WAIT'}
                                      </div>
                                      <div 
                                        ref={modalRef}
                                        className="relative bg-gray-800 text-white rounded-2xl shadow-2xl max-w-lg w-full mx-4 max-h-[90vh] overflow-auto"
                                        style={{
                                          backgroundColor: '#1F2937',
                                          transform: 'translateZ(0)',
                                          willChange: 'transform',
                                          zIndex: 10051,
                                          position: 'relative'
                                        }}
                                        onClick={(e) => e.stopPropagation()}
                                      >
                                        <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', padding: '0.5rem 0.5rem 0 0' }}>
                                          <button onClick={() => setShowTestimonialForm(false)} aria-label="Close" style={{ background: 'transparent', border: 'none', color: '#9aa6b2', fontSize: 18, cursor: 'pointer' }}>âœ•</button>
                                        </div>
                                        <div
                                          style={{
                                            backgroundColor: '#0b1220',
                                            color: '#fff',
                                            borderRadius: 10,
                                            border: '1px solid rgba(255,255,255,0.04)',
                                            width: 'min(640px, 96vw)',
                                            maxWidth: '640px',
                                            maxHeight: '84vh',
                                            overflowY: 'auto',
                                            padding: '0.75rem 0.75rem',
                                            boxSizing: 'border-box',
                                            position: 'relative'
                                          }}
                                        >
                                          <h2 id="testimonial-modal-title" style={{ textAlign: 'center', fontSize: '1.15rem', margin: '0 0 0.5rem', fontWeight: 700 }}>Submit Your Testimonial</h2>
                                          <div style={{ padding: '0 0.25rem 0.5rem' }}>
                                            <MinimalWinnerForm onClose={() => setShowTestimonialForm(false)} />
                                          </div>
                                        </div>
                                      </div>
                                    </div>,
                                    document.body
                                  )}
                                </>
                              )
                          } />
                        </Routes>
                        <UserOnboardingModal
                          open={!!user && showOnboarding}
                          campusList={campusList || []}
                          houseList={houseList || []}
                          onSubmit={handleOnboarding}
                        />
                      </CampusProvider>
                    </ThemeProvider>
                  </Router>
                                        style={{
                                          backgroundColor: '#0b1220',
                                          color: '#fff',
                                          borderRadius: 10,
                                          border: '1px solid rgba(255,255,255,0.04)',
                                          width: 'min(640px, 96vw)',
                                          maxWidth: '640px',
                                          maxHeight: '84vh',
                                          overflowY: 'auto',
                                          padding: '0.75rem 0.75rem',
                                          boxSizing: 'border-box',
                                          position: 'relative'
                                        }}
                                      >
                                        <h2 id="testimonial-modal-title" style={{ textAlign: 'center', fontSize: '1.15rem', margin: '0 0 0.5rem', fontWeight: 700 }}>Submit Your Testimonial</h2>
                                        <div style={{ padding: '0 0.25rem 0.5rem' }}>
                                          <MinimalWinnerForm onClose={() => setShowTestimonialForm(false)} />
                                        </div>
                                      </div>
                                    </div>
                                  </div>,
                                  document.body
                                )}
                              </div>
                        } />
                      </Routes>
                      <UserOnboardingModal
                        open={!!user && showOnboarding}
                        campusList={campusList || []}
                        houseList={houseList || []}
                        onSubmit={handleOnboarding}
                      />
                    </CampusProvider>
                  </ThemeProvider>
                </Router>
                <div
                  style={{
                    backgroundColor: '#0b1220',
                    color: '#fff',
                    borderRadius: 10,
                    border: '1px solid rgba(255,255,255,0.04)',
                    width: 'min(640px, 96vw)',
                    maxWidth: '640px',
                    maxHeight: '84vh',
                    overflowY: 'auto',
                    padding: '0.75rem 0.75rem',
                    boxSizing: 'border-box',
                    position: 'relative'
                  }}
                >
                  <h2 id="testimonial-modal-title" style={{ textAlign: 'center', fontSize: '1.15rem', margin: '0 0 0.5rem', fontWeight: 700 }}>Submit Your Testimonial</h2>
                  <div style={{ padding: '0 0.25rem 0.5rem' }}>
                    <MinimalWinnerForm onClose={() => setShowTestimonialForm(false)} />
                  </div>
                </div>
              </div>
            </div>,
            document.body
          )}
          
          <UserOnboardingModal
            open={!!user && showOnboarding}
            campusList={campusList || []}
            houseList={houseList || []}
            onSubmit={handleOnboarding}
          />
        </CampusProvider>
      </ThemeProvider>
    </Router>
  );
}

export default App;
